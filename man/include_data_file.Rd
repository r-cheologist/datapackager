% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/include_data_file.R
\name{include_data_file}
\alias{include_data_file}
\title{include_data_file}
\usage{
include_data_file(file_to_include, root, data_catalogue = NULL,
  file_is_url = FALSE, file_user = NULL, file_password = NULL,
  file_reading_function, file_reading_options = NULL,
  file_reading_package_dependencies = NULL, file_distributable = TRUE,
  file_gitignore = !file_distributable,
  file_rbuildignore = !file_distributable, compression_algo = NULL,
  hashing_algo = NULL, save_catalogue = TRUE)
}
\arguments{
\item{file_to_include}{Single \code{\link{character}} representing a path to
a data file to be included (may also be an URL; see \code{file_is_url}).}

\item{root}{Single \code{\link{character}} representing the path of the
directory in which the package infrastructure is to reside. The directory
must have been \code{\link{init}}.}

\item{data_catalogue}{Single \code{link{character}} object representing the
relative path to the \code{\link{data_catalogue}}-containing \code{R} data
file within the packaging infrastructure (defaulting to
\code{data/data_catalogue.rda} if set to \code{\link{NULL}}).}

\item{file_is_url}{Single \code{\link{logical}} indicating whether the data
file included resides remotely and must be retreived for integration.}

\item{file_user}{Single \code{\link{character}} object used for authentication
where retrieval of a remote data file requires it.}

\item{file_password}{Single \code{\link{character}} object used for
authentication where retrieval of a remote data file requires it.}

\item{file_reading_function}{Single \code{\link{character}} object naming the
function used for parsing the data file into an \code{R} object.}

\item{file_reading_options}{Named \code{\link{list}} of options used by
\code{fiel_reading_function} for parsing the data file into an \code{R}
object.}

\item{file_reading_package_dependencies}{A \code{\link{character}} object
naming \code{R} extension packages required for \code{file_reading_function}.}

\item{file_distributable}{Single \code{\link{logical}} shortcut for
\code{file_gitignore == TRUE && file_rbuildignore ==TRUE}.}

\item{file_gitignore}{Single \code{\link{logical}} indicating whether the
objects resulting from the integration of the data file into the package
infrastructure are to be listed in \code{.gitignore} to provent their
integration into a \code{git} repository - handy e.g. in the case, where an
\code{R} package documenting a statistical analysis is to be distributed
without the underlying raw data.}

\item{file_rbuildignore}{Single \code{\link{logical}} indicating whether the
objects resulting from the integration of the data file into the package
infrastructure are to be listed in \code{.Rbuildignore} to provent their
integration into builds of the resulting \code{R}package - handy e.g. in the
case, where an \code{R} package documenting a statistical analysis is to be
distributed without the underlying raw data.}

\item{compression_algo}{Single \code{\link{character}} defining the method
for compression of \code{R} objects stored in the package infrastructure.
Defaults to the \code{default_compression_algo} \code{\link{attributes}} of
the \code{\link{data_catalogue}} used.}

\item{hashing_algo}{Single \code{\link{character}} defining the method
for cryptographic hashing (through \code{\link[digest]{digest}}; for details
see there) of \code{R} objects stored in the package infrastructure.Defaults
to the \code{default_hashing_algo} \code{\link{attributes}} of the
\code{\link{data_catalogue}} used.}

\item{save_catalogue}{Single \code{\link{logical}} indicating whether the
amended \code{\link{data_catalogue}} object is to be saved back to the
package infrastructure or just (silently) returned.}
}
\value{
Returns a \code{\link{list}} of \code{\link{data_catalogue}}
characteristics via \code{\link{invisible}}.
}
\description{
Integrating a data file into \pkg{datapackageR}s infrastructure.
}
\details{
The function proceeds as follows:
\enumerate{
  \item If the file does not reside locally, it is downloaded in a first step
    (depending on \code{File.Is.Remote}),
     using \code{\link{retrieve_remote_file}}.
  \item Next, a \code{zip} compressed version of the file is saved to
    \code{inst/extdata} of the package infrastructure, using the internal
    function \code{save_zipfile}.
  \item For future integrity checking, cryptographic hashes are captured for
    both the uncompressed and \code{zip}-compressed versions of the file
    (using \code{hashing_algo}).
  \item Using the function & options provided by \code{file_reading_function}
    and \code{file_reading_options}, respectively, the data file is parsed
    into an \code{R} object and that object is cryptographically hashed as
    well (again using \code{hashing_algo}). Using the internal helper
    function \code{data_rename_and_writeout}, the object is renamed to the
    original file's \code{\link{basename}} and saved into the \code{data}
    directory of the package's infrastructure while utilizing the data
    compression gien by \code{compression_algo}.
  \item If \code{file_reading_function} requires dependencies, the
    appropriate packages (given by \code{File.Reading.Package.Dependencies})
    are integrated into the \code{DESCRIPTION} file using
   \pkg{devtools}-provided tools.
  \item Depending on the options \code{File.Git.Ignore} and
    \code{File.R.Buildignore}, \code{.gitignore} and \code{.Rbuildignore} in
    the top level of the resulting package infrastructure are amended using
    the internal function \code{manage_gitignore} and
    \code{\link[devtools]{use_build_ignore}}, respectively.
  \item Using the information gathered, the \code{\link{data_catalogue}} file
    is updated, saved into the worked-on package infrastructure (if
    \code{save_catalogue == TRUE}) and finally (invisibly) returned.
}
}
\examples{
# Load tools
library(magrittr)

# Generate package infrastructure
## Define a package root
pkg_root <- tempdir() \%>\%
  file.path("packagetest")

## Create the infrastructure
init(
  root = pkg_root)

## Investigate the data catalogue
tmp_env <- new.env()
pkg_root \%>\%
  file.path("data/data_catalogue.rda") \%>\%
  load(envir = tmp_env)
tmp_env$data_catalogue \%>\%
  str()

# Add a local data file
## Create a dummy data file
data.frame(
  x   = 1,
  y   = 1:10,
  fac = sample(LETTERS[1:3], 10, replace = TRUE)) \%>\%
  write.table(
    file      = file.path(dirname(pkg_root), "data_dummy.tsv"),
    sep       = "\\t",
    col.names = TRUE,
    row.names = FALSE)

## Add the dummy file to the existing package infrastructure
data_catalogue <- include_data_file(
  file_to_include = file.path(dirname(pkg_root), "data_dummy.tsv"),
  root = pkg_root,
  file_reading_function = "read.csv",
  file_reading_options = list(sep = "\\t", stringsAsFactors = FALSE))

## Investigate the data catalogue
data_catalogue \%>\%
  str()

# Add a remote file (from Billing et al. (2016). Comprehensive transcriptomic
# and proteomic characterization of human mesenchymal stem cells reveals
# source specific cellular markers. Sci Rep 6, 21507.
# Licensed under the Creative Commons Attribution 4.0 International License.
# http://creativecommons.org/licenses/by/4.0/
# EXCLUDED FROM BUILDS
\donttest{ # To avoid dependence on readxl
  require(readxl)
  ## Complicated URL generation to circumvent line length restrictions
  tmp_url <- paste0(
    c("http://www.nature.com/article-assets/npg/srep",
      "2016/160209/srep21507/extref/srep21507-s4.xls"),
    collapse = "/")
  include_data_file(
    root = pkg_root,
    file_to_include = tmp_url,
    file_is_url = TRUE,
    file_reading_function = "read_excel",
    file_reading_options = list(skip = 1),
    file_reading_package_dependencies = "readxl",
    file_distributable = FALSE)

  ## Investigate the data catalogue
  data_catalogue \%>\%
    str()
}

# Clean up the package root - ensure proper example testing by R CMD check
unlink(pkg_root, recursive = TRUE)
}
\seealso{
\code{\link{init}}, \code{\link{remove_data_file}},
\code{\link[digest]{digest}}, \code{\link{data_catalogue}}
}
\author{
Johannes Graumann
}
